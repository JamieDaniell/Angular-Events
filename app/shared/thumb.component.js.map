{"version":3,"sources":["shared/thumb.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAEA,mBAAmB;YACnB,iBAAiB;YACjB,cAAc;YAOd;gBAAA;oBAMI,gFAAgF;oBAChF,sEAAsE;oBACtE,2DAA2D;oBACjD,kBAAa,GAAyB,IAAI,mBAAY,EAAU,CAAC;gBAc/E,CAAC;gBAZG,iCAAiC;gBACjC,wCAAwC;gBACxC,oCAAW,GAAX;oBAEC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC3C,CAAC;gBACD,kHAAkH;gBAClH,wCAAwC;gBACxC,gCAAO,GAAP;oBAEI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAc,IAAI,CAAC,MAAM,kBAAe,CAAC,CAAC;gBACnE,CAAC;gBAlBD;oBAAC,YAAK,EAAE;;8DAAA;gBAKR;oBAAC,aAAM,EAAE;;qEAAA;gBAdb;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,WAAW,EAAE,iCAAiC;wBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;qBAChD,CAAC;;kCAAA;gBAwBF,qBAAC;YAAD,CAvBA,AAuBC,IAAA;YAvBD,2CAuBC,CAAA","file":"thumb.component.js","sourcesContent":["import { Component, Input , Output, EventEmitter } from 'angular2/core';\n\n// thumb directive \n// give template \n// give style \n\n@Component({\n    selector: 'acw-thumb',\n    templateUrl: 'app/shared/thumb.component.html',\n    styleUrls: ['app/shared/thumb.component.css']\n})\nexport class ThumbComponent \n{\n    // nested component often needs to interact with its parent component \n    // uses @input and @output\n    @Input() rating: number;\n    thumbWidth: number;\n    // events are the only way to pass information to the outer/containing component\n    // event emitter can send an error <generic> defines the type of event\n    // @output allows container to expose the info defined also\n    @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n    \n    // runs when the file is changed \n    // fires when @input property is changed\n    ngOnChanges(): void \n    {\n    \tthis.thumbWidth = this.rating * 86 / 5;\n\t}\n\t// from above the ratingClicked event emitter sends a string back to the outer coponent ( Event-list.component.ts)\n\t// insert the rating form the component \n\tonClick() \n\t{\n\t    this.ratingClicked.emit(`The rating ${this.rating} was clicked.`);\n    }\n}\n"]}