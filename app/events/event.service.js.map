{"version":3,"sources":["events/event.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAKA,6EAA6E;YAI7E;gBAKI,kCAAkC;gBAClC,sBAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;oBAHvB,cAAS,GAAG,mDAAmD,CAAC;gBAGtC,CAAC;gBAEnC,8BAA8B;gBAC9B,gCAAS,GAAT;oBAEF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,uBAAuB;yBAC3D,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAU,QAAQ,CAAC,IAAI,EAAE,EAAzB,CAAyB,CAAC,CAAC,8BAA8B;yBACrF,EAAE,CAAC,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAA3C,CAA2C,CAAC;yBACvD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC3B,CAAC;gBAEO,kCAAW,GAAnB,UAAoB,KAAe;oBAElC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACrB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;gBAC/D,CAAC;gBAxBF;oBAH8C,oCAAoC;oBAGjF,iBAAU,EAAE;;gCAAA;gBAyBb,mBAAC;YAAD,CAtBA,AAsBC,IAAA;YAtBD,uCAsBC,CAAA","file":"event.service.js","sourcesContent":["import { Injectable } from 'angular2/core';\nimport { IEvent } from './event';\nimport { Http, Response } from 'angular2/http'; // needed to get data from the web\nimport { Observable } from 'rxjs/Observable'; // needed to asncrounously get data \n\n// decorator only really needed if there is a service injected into this one \n@Injectable()\n\n// create a service class \nexport class EventService \n{\n    \n    private _eventUrl = 'https://angular-jamiedaniell.c9users.io/data.json';\n    \n    // gives a variable of _http type \n    constructor(private _http: Http){ }\n    \n    // returns an array of events \n    getEvents(): Observable<IEvent[]> \n    {\n\t\treturn this._http.get(this._eventUrl) // get the events array\n\t\t\t.map((response: Response) => <IEvent[]>response.json()) // map the results to an array\n\t\t\t.do(data => console.log('All: ' + JSON.stringify(data)))\n\t\t\t.catch(this.handleError);\n\t}\n\t\n\tprivate handleError(error: Response) \n\t{\n\t\tconsole.error(error);\n\t\treturn Observable.throw(error.json().error || 'Server error');\n\t}\n}\n"]}